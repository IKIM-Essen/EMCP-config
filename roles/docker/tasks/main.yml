---

- name: remove old docker install
  apt:
    name: ['docker','docker-engine','docker.io','containerd','runc']
    state: absent
  tags: docker

- name: Add Docker GPG key
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg
  tags: docker

- name: Create root user docker config directory
  file:
     path: /root/.docker
     owner: root
     group: root
     mode: 0755
     state: directory
  tags: docker

- name: Create systemd docker config directory
  file:
     path: /etc/systemd/system/docker.service.d
     owner: root
     group: root
     mode: 0755
     state: directory
  tags: docker

#  proxy settings for docker
# ideally limit this to a whitelist
- name: Docker container proxy config -- Configure proxy services for docker containers
  template:
     src: "docker-config.json.j2"
     dest: "/root/.docker/config.json"
     owner: root
     group: root
     mode: 0644
     force: yes
  tags: ['never', 'docker']
  notify: restart docker unit

# proxy settings for docker
- name: Docker proxy config -- Configure proxy services for dockerd
  template:
    src: "systemd-http-proxy.conf.j2"
    dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
    owner: root
    group: root
    mode: 0644
    force: yes
  tags: docker
  notify: restart docker unit

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
  tags: docker

- name: Install new docker-ce
  apt:
    name: ['apt-transport-https','ca-certificates','curl','software-properties-common']
    state: present
    update_cache: yes
  tags: docker

- name: install docker packages
  apt: 
    name:
      - docker-ce
      - docker-ce-cli
    state: present
    force: yes
  tags: docker
  notify: restart docker unit

- name: adding existing user "{{ ansible_user }}" to group sudo
  user:
     name: "{{ ansible_user }}"
     groups: docker
     append: yes
  become: yes
  register: user_info
  tags: docker
  notify: restart docker unit

- name: Create a user-specific Docker settings directory for "{{ ansible_user }}"
  file:
     path: "{{ user_info.home }}/.docker"
     owner: "{{ user_info.name }}"
     group: "{{ user_info.group }}"
     mode: 0755
     state: directory
  tags: docker

- name: Test whether a Docker configuration file already exists for "{{ ansible_user }}"
  stat:
     path: "{{ user_info.home }}/.docker/config.json"
  register: docker_config_file
  tags: docker

- name: Read the Docker configuration file of "{{ ansible_user }}" if it exists
  slurp:
     src: "{{ docker_config_file.stat.path }}"
  register: docker_config
  when: docker_config_file.stat.exists
  tags: docker

- name: Add proxy settings for Docker containers
  copy:
     content: "{{ docker_existing_config | combine(docker_proxy_config, recursive=True) | to_nice_json(ensure_ascii=False) }}"
     dest: "{{ user_info.home }}/.docker/config.json"
     owner: "{{ user_info.name }}"
     group: "{{ user_info.group }}"
     mode: 0644
     force: yes
  vars:
     docker_existing_config: "{{ docker_config.content | default('{}' | b64encode) | b64decode | from_json }}"
     docker_proxy_config: "{{ lookup('template', 'docker-config.json.j2', convert_data=False) | from_json }}"
  tags: docker
  notify: restart docker unit

- name: Just force systemd to reread configs (2.4 and above)
  ansible.builtin.systemd:
    daemon_reload: yes
  tags: docker

- name: Just force systemd to re-execute itself (2.8 and above)
  ansible.builtin.systemd:
    daemon_reexec: yes
  tags: docker
