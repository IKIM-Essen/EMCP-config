- name: Install dependencies to use the pip module
  ansible.builtin.apt:
    name:
      - python3-pip
      - python3-virtualenv
      - python3-setuptools
    state: present
  become: true

- name: Install python kubernetes client using pip
  ansible.builtin.pip:
    name: kubernetes
  environment: "{{ proxy_env | default('') }}"
  become: true

- name: Install helm apt repo key
  ansible.builtin.apt_key:
    url: https://baltocdn.com/helm/signing.asc
    state: present
  environment: "{{ proxy_env | default('') }}"
  become: true

- name: Install helm apt repo
  ansible.builtin.apt_repository:
    repo: deb https://baltocdn.com/helm/stable/debian/ all main
    update_cache: true
    install_python_apt: true
    state: present
  become: true

- name: Install helm apt package
  ansible.builtin.apt:
    name: helm
    state: present
  become: true

- name: Ensure longhorn node labels and annotations
  kubernetes.core.k8s:
    kind: Node
    name: "{{ k8s_setup_longhorn_item }}"
    state: patched
    kubeconfig: "{{ rke2_kubeconf_host_path }}{{ rke2_download_kubeconf_file_name }}"
    definition:
      metadata:
        labels:
          node.longhorn.io/create-default-disk: 'config'
        annotations:
          node.longhorn.io/default-disks-config: "{{ longhorn_nodes_disks_config }}"
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: k8s_setup_longhorn_item
  become: true

- name: Install longhorn helm repo
  kubernetes.core.helm_repository:
    repo_name: longhorn
    repo_url: https://charts.longhorn.io
    repo_state: present
  environment: "{{ proxy_env | default('') }}"
  become: true

- name: Create longhorn auth secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ rke2_kubeconf_host_path }}{{ rke2_download_kubeconf_file_name }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ longhorn_backup_cred_secret }}"
        namespace: longhorn-system
      data:
        AWS_ACCESS_KEY_ID: "{{ longhorn_minio_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ longhorn_minio_secret_key }}"
        AWS_ENDPOINTS: "{{ longhorn_minio_endpoint }}"

- name: Install longhorn chart
  kubernetes.core.helm:
    release_name: longhorn
    release_namespace: longhorn-system
    chart_ref: longhorn/longhorn
    chart_version: "{{ longhorn_chart_version }}"
    kubeconfig: "{{ rke2_kubeconf_host_path }}{{ rke2_download_kubeconf_file_name }}"
    values:
      defaultSettings:
        backupTarget: "{{ longhorn_backup_target_url }}"
        backupTargetCredentialSecret: "{{ longhorn_backup_cred_secret }}"
        createDefaultDiskLabeledNodes: true
    wait: true
    create_namespace: true
    release_state: present
  environment: "{{ proxy_env | default('') }}"
  become: true
