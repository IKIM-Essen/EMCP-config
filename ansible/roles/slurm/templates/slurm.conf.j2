# slurm.conf file generated by configurator easy.html.
# Put this file on all nodes of your cluster.
# See the slurm.conf man page for more information.
#
ClusterName={{ slurm_cluster_name }}
{% for host in groups[slurm_controller_group_name] %}
{% if host == inventory_hostname %}
SlurmctldHost={{ ansible_facts['hostname'] }}
{% else %}
SlurmctldHost={{ host }}
{% endif %}
{% endfor %}
#
#MailProg=/bin/mail
MpiDefault=none
#MpiParams=ports=#-#
ProctrackType=proctrack/cgroup
ReturnToService=1
SlurmctldPidFile=/var/run/slurmctld.pid
#SlurmctldPort=6817
SlurmdPidFile=/var/run/slurmd.pid
#SlurmdPort=6818
SlurmdSpoolDir=/var/spool/slurmd
SlurmUser=slurm
#SlurmdUser=root
StateSaveLocation=/var/spool/slurmctld
SwitchType=switch/none
TaskPlugin=task/affinity
#
#
# TIMERS
#KillWait=30
#MinJobAge=300
#SlurmctldTimeout=120
#SlurmdTimeout=300
#
#
# SCHEDULING
SchedulerType=sched/backfill
SelectType=select/cons_tres
SelectTypeParameters=CR_Core
#
#
# LOGGING AND ACCOUNTING
#AccountingStorageHost=
#AccountingStorageType=accounting_storage/slurmdbd
#JobCompType=jobcomp/filetxt
#JobCompLoc=/n0/job_completions
#JobAcctGatherFrequency=30
#JobAcctGatherType=jobacct_gather/linux
#SlurmctldDebug=info
SlurmctldLogFile=/var/log/slurmctld.log
#SlurmdDebug=info
SlurmdLogFile=/var/log/slurmd.log
#
#
# COMPUTE NODES
GresTypes=gpu
{% for host in groups[slurm_compute_group_name] %}
{% set gpu_count = hostvars[host]['ansible_local']['gpu']['count'] | default(0) %}
NodeName={{ hostvars[host]['ansible_hostname'] }} {% if gpu_count > 0 -%} Gres=gpu:{{ gpu_count }} {% endif -%} CPUs={{ hostvars[host]['ansible_processor_nproc'] }} Boards=1 SocketsPerBoard={{ hostvars[host]['ansible_processor_count'] }} CoresPerSocket={{ hostvars[host]['ansible_processor_cores'] }} ThreadsPerCore={{ hostvars[host]['ansible_processor_threads_per_core'] }} State=UNKNOWN
{% endfor %}

{% for partition in slurm_partitions %}
{% if partition['hosts'] %}
{% set is_default = partition['default'] | default(false) | bool %}
PartitionName={{ partition['name'] }} {% if partition['hosts'] == 'ALL' -%} Nodes=ALL {% else -%} {% set nodelist = partition['hosts'] | map('extract', hostvars, 'ansible_hostname') | join(',') -%} Nodes={{ nodelist }} {% endif -%} {% if is_default -%} Default=YES {% endif -%} MaxTime=INFINITE State=UP
{% endif %}
{% endfor %}
