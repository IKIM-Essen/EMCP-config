---
- name: Check whether the build results already exist
  ansible.builtin.stat:
    path: "{{ slurm_repo_local_path }}/{{ slurm_item }}/slurmd_{{ slurm_version_with_release }}_amd64.deb"
  register: slurmd_deb_pkg

- name: Install the ubuntu development toolchain
  become: true
  ansible.builtin.apt:
    name:
      - dpkg-dev
      - pbuilder
      - ubuntu-dev-tools
      - debhelper
    state: present
    update_cache: true
  when: not slurmd_deb_pkg['stat']['exists']

- name: Configure pbuilder to use the http proxy
  become: true
  ansible.builtin.blockinfile:
    path: /etc/pbuilderrc
    block: "export http_proxy={{ http_proxy }}"
    owner: root
    group: root
    mode: 0644
    state: present
  when:
    - not slurmd_deb_pkg['stat']['exists']
    - http_proxy is defined

- name: Create a pbuilder environment (max 30 minutes, poll every 10 seconds)
  ansible.builtin.command:
    argv:
      - pbuilder-dist
      - "{{ slurm_item }}"
      - create
  changed_when: true
  async: 1800
  poll: 10
  when: not slurmd_deb_pkg['stat']['exists']

- name: Create a temporary work directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: slurm_builddir
  when: not slurmd_deb_pkg['stat']['exists']

- name: Obtain the upstream source code
  ansible.builtin.get_url:
    url: "https://github.com/SchedMD/slurm/archive/refs/tags/{{ slurm_github_tag }}.tar.gz"
    dest: "{{ slurm_builddir['path'] }}/slurm-llnl_{{ slurm_version }}.orig.tar.gz"
    mode: 0644
  when: slurm_builddir['path'] is defined

- name: Extract the upstream tarball
  ansible.builtin.unarchive:
    src: "{{ slurm_builddir['path'] }}/slurm-llnl_{{ slurm_version }}.orig.tar.gz"
    dest: "{{ slurm_builddir['path'] }}"
    remote_src: true
  when: slurm_builddir['path'] is defined

- name: Extract the upstream ubuntu build metadata
  ansible.builtin.unarchive:
    src: "http://archive.ubuntu.com/ubuntu/pool/universe/s/slurm-llnl/slurm-llnl_{{ slurm_upstream_version_with_release }}.debian.tar.xz"
    dest: "{{ slurm_builddir['path'] }}/slurm-{{ slurm_github_tag }}"
    remote_src: true
  when: slurm_builddir['path'] is defined

- name: Patch the source tree
  ansible.posix.patch:
    src: "{{ slurm_github_tag }}-{{ ansible_distribution_release }}.patch"
    basedir: "{{ slurm_builddir['path'] }}/slurm-{{ slurm_github_tag }}"
    strip: 1
  when: slurm_builddir['path'] is defined

- name: Create a buildable source package
  ansible.builtin.command:
    chdir: "{{ slurm_builddir['path'] }}/slurm-{{ slurm_github_tag }}"
    argv:
      - debuild
      - -S
      - -d
      - -us
      - -uc
  changed_when: true
  when: slurm_builddir['path'] is defined

- name: Build installable packages (max 1 hour, poll every 10 seconds)
  ansible.builtin.command:
    argv:
      - pbuilder-dist
      - jammy
      - build
      - "{{ slurm_builddir['path'] }}/slurm-llnl_{{ slurm_version_with_release }}.dsc"
      - --buildresult
      - "{{ slurm_builddir['path'] }}/{{ slurm_item }}_result"
  async: 3600
  poll: 10
  changed_when: true
  when: slurm_builddir['path'] is defined

- name: Copy the built packages to the local repository
  become: true
  ansible.builtin.copy:
    src: "{{ slurm_builddir['path'] }}/{{ slurm_item }}_result/"
    dest: "{{ slurm_repo_local_path }}/{{ slurm_item }}/"
    remote_src: true
    owner: root
    group: root
  when: slurm_builddir['path'] is defined

- name: Create the package index on the local repository
  ansible.builtin.shell:
    chdir: "{{ slurm_repo_local_path }}"
    cmd: dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
  changed_when: true
  when: slurm_builddir['path'] is defined

- name: Delete the work directory
  ansible.builtin.file:
    path: "{{ slurm_builddir['path'] }}"
    state: absent
  when: slurm_builddir['path'] is defined
