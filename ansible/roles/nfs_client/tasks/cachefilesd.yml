- name: Install cachefilesd
  ansible.builtin.apt:
    name: cachefilesd
    state: present

- name: Create a config directory for the cachefilesd service
  ansible.builtin.file:
    path: /etc/systemd/system/cachefilesd.service.d
    owner: root
    group: root
    mode: "0755"
    state: directory

- name: Configure cachefilesd restart automatically on failure to avoid issues during startup
  ansible.builtin.template:
    src: restart-on-failure.conf.j2
    dest: /etc/systemd/system/cachefilesd.service.d/restart-on-failure.conf
    owner: root
    group: root
    mode: "0644"

- name: Start the cachefilesd service
  ansible.builtin.systemd:
    name: cachefilesd
    enabled: true
    daemon_reload: true
    state: started

- name: Create the cache directory
  ansible.builtin.file:
    path: "{{ cachefilesd_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: Configure the cache path
  ansible.builtin.lineinfile:
    path: /etc/cachefilesd.conf
    regexp: "^dir\\s"
    line: "dir {{ cachefilesd_directory }}"
    owner: root
    group: root
    mode: "0644"
  notify: restart cachefilesd

- name: Tweak other cachefilesd settings
  ansible.builtin.lineinfile:
    path: /etc/cachefilesd.conf
    regexp: "^{{ nfs_client_item['name'] }}\\s"
    line: "{{ nfs_client_item['name'] }} {{ nfs_client_item['value'] }}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ cachefilesd_options }}"
  loop_control:
    loop_var: nfs_client_item
  notify: restart cachefilesd

- name: Enable cachefilesd
  ansible.builtin.lineinfile:
    path: /etc/default/cachefilesd
    regexp: '^#?RUN='
    line: "RUN={{ 'yes' if cachefilesd_enabled else 'no' }}"
    owner: root
    group: root
    mode: "0644"
  notify: restart cachefilesd
