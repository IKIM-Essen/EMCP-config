
- name: download the rke2 installation script
  ansible.builtin.get_url:
    url: "{{ rke2_install_script_url }}"
    dest: /tmp/rke2.sh
    mode: 0500
  environment: "{{ proxy_env }}"
  become: true

- name: populate service facts
  ansible.builtin.service_facts:
  become: true

- name: get installed rke2 version
  ansible.builtin.shell: |
    set -o pipefail
    /usr/local/bin/rke2 --version | grep -E "rke2 version" | awk '{print $3}'
  args:
    executable: /bin/bash
  changed_when: false
  register: installed_rke2_version
  when: ("rke2-" + rke2_type + ".service") in ansible_facts['services']

- name: run the rke2 install script
  ansible.builtin.command: /tmp/rke2.sh
  environment:
    # INSTALL_RKE2_VERSION: "{{ rke2_version }}"
    INSTALL_RKE2_CHANNEL_URL: "{{ rke2_channel_url }}"
    INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
    INSTALL_RKE2_TYPE: "{{ rke2_type }}"
    INSTALL_RKE2_METHOD: "{{ rke2_method }}"
    HTTP_PROXY: "{{ http_proxy }}"
    HTTPS_PROXY: "{{ http_proxy }}"
    NO_PROXY: "{{ no_proxy }}"
  when: (rke2_version != ( installed_rke2_version.stdout | default({})))
        or installed_rke2_version is not defined
  become: true

- name: retrieve primary active server
  ansible.builtin.uri:
    url: "https://{{ rke2_server_url }}:{{ rke2_apiserver_dest_port }}"
    method: GET
    return_content: true
    use_proxy: false
    validate_certs: false
    status_code:
      - 401
      - "-1"
  register: apiserver_curl

- set_fact:
    current_server_is_not_first: true
  when: apiserver_curl['status'] == 401

- set_fact:
    current_server_is_not_first: false
  when: apiserver_curl['status'] != 401

- name: create rke2 config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    mode: 0644
  become: true

- name: write the rke2 config file
  ansible.builtin.template:
    src: "{{ rke2_type }}_config.yaml.j2"
    dest: /etc/rancher/rke2/config.yaml
    mode: 0644
    owner: root
    group: root
  become: true

- name: write proxy settings to rke2 systemd unit env file
  ansible.builtin.template:
    src: rke2.env.j2
    dest: "/etc/default/rke2-{{ rke2_type }}"
    mode: 0644
    owner: root
    group: root
  become: true

- name: start and enable the systemd service
  ansible.builtin.systemd:
    name: "rke2-{{ rke2_type }}.service"
    state: started
    enabled: true
  become: true

- name: set the first_run_server variable
  ansible.builtin.set_fact:
    first_run_server: "{{ inventory_hostname }}"
  when: 
    - first_run_server is not defined
    - rke2_type == "server"
