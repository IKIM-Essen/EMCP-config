#!/usr/bin/env ansible-playbook

# setup rancher on k1-20

---
- hosts: k8s
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  vars:
    ansible_ssh_private_key_file: files/ikimk8s_rsa
  environment: "{{ k8s_env | default({}) }}"
  roles:
    - update
    - docker
    - rancher
    - security


- hosts: infra
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - docker
    - security

- hosts: server
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - security


- hosts: cluster
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - c-nodes
    - singularity
    - security
    - ssh-config
    - proxies


- hosts: gpucluster
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - g-nodes
    - proxies
    - ssh-config
    - docker
    - nvidia
    - miniconda


- hosts: ipaserver
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - proxies
    - docker
    - ipaserver
    - ipaserver-settings


- hosts: ipaclients
  become: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  pre_tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - chrony
      tags: freeIPA-client
  roles:
    - role: freeipa.ansible_freeipa.ipaclient
      state: present
      tags: freeIPA-client


- hosts: managed_cluster
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - subidmap
    - nfs-client
    - users


- hosts: tio
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - tio-users
    - tio-devtools
    - seafile


- hosts: tionfsserver
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - tio-nfsexport


- hosts: tionfsclients
  become: true
  ignore_errors: true
  remote_user: ubuntu
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - update
    - security
    - tio-nfsmount
